Practical No 7: Write a program to implement double ended queue (dequeue) using
arrays.
#include <stdio.h>
#define size 5
int deque[size];
int f = -1, r = -1;
// insert_front function will insert the value from the front
void insert_front()
{ int value;
 if((f==0 && r==size-1) || (f==r+1))
 {
 printf("Overflow");
 }
 else if((f==-1) && (r==-1))
 {

 printf("insert the value from front:\n");
 scanf("%d",&value);
 f=r=0;
 deque[f]=value;
 }
 else if(f==0)
 {
 f=size-1;
 deque[f]=value;
 }
 else
 {
 f=f-1;
 deque[f]=value;
 }
}

// insert_rear function will insert the value from the rear
void insert_rear()
{ int value;
 if((f==0 && r==size-1) || (f==r+1))
 {
 printf("Overflow");
 }
 else if((f==-1) && (r==-1))
 {

 printf("insert value from rear:\n");
 scanf("%d",&value);
 r=0;
 deque[r]=value;
 }
 else if(r==size-1)
 {
 r=0;
 deque[r]=value;
 }
 else
 {
 r++;
 deque[r]=value;
 }
}
void display()
{
 int i=f;
 printf("\nElements in a deque are: ");
 while(i!=r)
 {
 printf("%d ",deque[i]);
 i=(i+1)%size;
 }
 printf("%d",deque[r]);
}

void getfront()
{
 if((f==-1) && (r==-1))
 {
 printf("Deque is empty");
 }
 else
 {
 printf("\nThe value of the element at front is: %d", deque[f]);
 }
}
void getrear()
{
 if((f==-1) && (r==-1))
 {
 printf("Deque is empty");
 }
 else
 {
 printf("\nThe value of the element at rear is %d", deque[r]);
 }
}
void delete_front()
{
 if((f==-1) && (r==-1))
 {
 printf("Deque is empty");
 }
 else if(f==r)
 {
 printf("\nThe deleted element is %d", deque[f]);
 f=-1;
 r=-1;
 }
 else if(f==(size-1))
 {
 printf("\nThe deleted element is %d", deque[f]);
 f=0;
 }
 else
 {
 printf("\nThe deleted element is %d", deque[f]);
 f=f+1;
 }
}

// delete_rear() function deletes the element from the rear
void delete_rear()
{
 if((f==-1) && (r==-1))
 {
 printf("Deque is empty");
 }
 else if(f==r)
 {
 printf("\nThe deleted element is %d", deque[r]);
 f=-1;
 r=-1;

 }
 else if(r==0)
 {
 printf("\nThe deleted element is %d", deque[r]);
 r=size-1;
 }
 else
 {
 printf("\nThe deleted element is %d", deque[r]);
 r=r-1;
 }
}

int main()
{
 while(1){
 int choice;
 printf("**--1.insert_front--**\n**--2.insert_rear--**\n**--3.display--**\n**--4.get_front--
**\n**--5.get_rear-**\n**--6.delete_front--**\n**--7.delete_rear--**\n");
 printf("enter your choice\n");
 scanf("%d",&choice);
 switch(choice)
 {
 case 1:
 {
 insert_front();
 break;
 }
 case 2:
 {
 insert_rear();
 break;
 }
 case 3:
 {
 display();
 break;
 }
 case 4:
 {
 getfront();
 break;
 }
 case 5:
 {
 getrear();
 break;
 }
 case 6:
 {
 delete_front();
 break;
 }
 case 7:
 {
 delete_rear();
 break;}
 default: { printf("invalid choice");
 }
 }


 }
 return 0;
} 