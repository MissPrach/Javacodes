Practical No 03: Write a program to implement a stack using a linked list.
#include <stdio.h>
#include<stdlib.h>
struct node{
 int data;
 struct node *next;
};
struct node *top=0;
void push()
{ struct node *newnode;
newnode=(struct node *)malloc(sizeof(struct node));
int data;
printf("enter element in stack");
scanf("%d",&data);
 newnode->data=data;
newnode->next=top;
top=newnode;
}
void pop()
{ struct node*temp=top;

 top=top->next;
 printf("deleted element is %d\n",temp->data);
 free(temp);

}
void peek()
{
 if(top==0)
 {
 printf("stack is empty\n");
 }
 else
 {
 printf("value in top is %d\n",top->data);
 }
}
void display()
{
 if(top==0)
 {
 printf("stack is empty\n");
 }
 else
 { struct node*temp;
 temp=top;
 while(temp!=0)
 {

 printf("values are %d\n",temp->data);
 temp=temp->next;

 }
 }
}
int main() {
 while(1)
 { int choice;
 printf("1.push\n2.pop\n3.peek\n4.display\n");
 printf("enter your choice\n");
 scanf("%d",&choice);
 switch(choice)
 {
 case 1:
 { push();
 break;
 }
 case 2:
 { pop();
 break;
 }
 case 3:
 { peek();
 break;
 }
 case 4:
 { display();
 break;
 }
 default:
 {
 printf("invalid choice");
 }
 }

 }